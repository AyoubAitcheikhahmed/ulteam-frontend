{"ast":null,"code":"import { login_begin, login_true, login_false } from \"./redux/user_redux\";\nimport axios from \"axios\"; //import { axiosReq } from './axiosReq'\n\nconst BASE_URL = \"http://localhost:5000/api/\";\nlet token_value = \"\";\n\nif (JSON.parse(localStorage.getItem(\"persist:root\")) == null || JSON.parse(localStorage.getItem(\"persist:root\")).user.user == null) {\n  token_value = \"Not_defined\";\n} else {\n  token_value = JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).user.token;\n}\n\nconst TOKEN = token_value; // const TOKEN = () => {\n//     if(JSON.parse(localStorage.getItem(\"persist:root\")) == null || JSON.parse(localStorage.getItem(\"persist:root\")).user.user == null){\n//         return \"Not_defined\";\n//    }else{\n//         return JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).user.token;\n//    }\n// }\n\nconsole.log(\"THE VALUE OF TOKEN IS : \", TOKEN);\nconsole.log(\"THE VALUE OF PARS token IS : \", JSON.parse(localStorage.getItem(\"persist:root\")).user.token);\nexport const loginProcess = async (dispatch, user) => {\n  try {\n    const respone = await axios.post(BASE_URL + \"authentification/signin/\", user);\n    dispatch(login_true(respone.data));\n  } catch (err) {\n    dispatch(login_false());\n  }\n};\nexport const adminRequest = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    token: `Bearer ${TOKEN}`\n  }\n});","map":{"version":3,"sources":["C:/Users/AYOUB/gitRepo/frontendweb-pieter-2122-AyoubAitcheikhahmed/ulteam/src/server_methodes.js"],"names":["login_begin","login_true","login_false","axios","BASE_URL","token_value","JSON","parse","localStorage","getItem","user","token","TOKEN","console","log","loginProcess","dispatch","respone","post","data","err","adminRequest","create","baseURL","headers"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,UAArB,EAAgCC,WAAhC,QAAmD,oBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAOC,QAAQ,GAAG,4BAAlB;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,IAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,KAAoD,IAApD,IAA4DH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDC,IAAjD,CAAsDA,IAAtD,IAA8D,IAA7H,EAAkI;AAC7HL,EAAAA,WAAW,GAAG,aAAd;AACJ,CAFD,MAEK;AACDA,EAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDC,IAA5D,EAAkEA,IAAlE,CAAuEC,KAArF;AACH;;AAED,MAAMC,KAAK,GAAGP,WAAd,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAQ,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCF,KAAvC;AACAC,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4CR,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDC,IAAjD,CAAsDC,KAAlG;AACA,OAAO,MAAMI,YAAY,GAAG,OAAOC,QAAP,EAAgBN,IAAhB,KAAyB;AAGjD,MAAG;AACC,UAAMO,OAAO,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAWd,QAAQ,GAAC,0BAApB,EAA+CM,IAA/C,CAAtB;AACAM,IAAAA,QAAQ,CAACf,UAAU,CAACgB,OAAO,CAACE,IAAT,CAAX,CAAR;AAEH,GAJD,CAIC,OAAMC,GAAN,EAAU;AACPJ,IAAAA,QAAQ,CAACd,WAAW,EAAZ,CAAR;AACH;AACJ,CAVM;AAYP,OAAO,MAAMmB,YAAY,GAAGlB,KAAK,CAACmB,MAAN,CAAa;AACrCC,EAAAA,OAAO,EAAEnB,QAD4B;AAErCoB,EAAAA,OAAO,EAAE;AAAEb,IAAAA,KAAK,EAAG,UAASC,KAAM;AAAzB;AAF4B,CAAb,CAArB","sourcesContent":["import { login_begin,login_true,login_false } from \"./redux/user_redux\"\r\nimport axios from \"axios\";\r\n//import { axiosReq } from './axiosReq'\r\n\r\nconst  BASE_URL = \"http://localhost:5000/api/\";\r\nlet token_value = \"\";\r\n\r\nif(JSON.parse(localStorage.getItem(\"persist:root\")) == null || JSON.parse(localStorage.getItem(\"persist:root\")).user.user == null){\r\n     token_value = \"Not_defined\";\r\n}else{\r\n    token_value = JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).user.token;\r\n}\r\n\r\nconst TOKEN = token_value;\r\n\r\n\r\n// const TOKEN = () => {\r\n//     if(JSON.parse(localStorage.getItem(\"persist:root\")) == null || JSON.parse(localStorage.getItem(\"persist:root\")).user.user == null){\r\n//         return \"Not_defined\";\r\n//    }else{\r\n//         return JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).user.token;\r\n//    }\r\n\r\n// }\r\n\r\nconsole.log(\"THE VALUE OF TOKEN IS : \",TOKEN)\r\nconsole.log(\"THE VALUE OF PARS token IS : \",JSON.parse(localStorage.getItem(\"persist:root\")).user.token)\r\nexport const loginProcess = async (dispatch,user) => {\r\n    \r\n    \r\n    try{\r\n        const respone = await axios.post(BASE_URL+\"authentification/signin/\",user);\r\n        dispatch(login_true(respone.data));\r\n\r\n    }catch(err){\r\n        dispatch(login_false());\r\n    }\r\n};\r\n\r\nexport const adminRequest = axios.create({\r\n    baseURL: BASE_URL,\r\n    headers: { token: `Bearer ${TOKEN}` },\r\n  });"]},"metadata":{},"sourceType":"module"}