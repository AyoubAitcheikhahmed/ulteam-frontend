{"ast":null,"code":"import { getProducts_begin, getProducts_true, getProducts_false, deleteProducts_begin, deleteProducts_true, deleteProducts_false, addProducts_begin, addProducts_true, addProducts_false, updateProducts_begin, updateProducts_true, updateProducts_false } from \"./product_redux\";\nimport axios from \"axios\";\nimport { adminRequest } from \"../server_methodes\";\nconst BASE_URL = \"http://localhost:5000/api/\";\nexport const getProducts = async dispatch => {\n  dispatch(getProducts_begin());\n\n  try {\n    const response = await axios.get(BASE_URL + \"products\");\n    dispatch(getProducts_true(response.data));\n  } catch (err) {\n    dispatch(getProducts_false());\n  }\n\n  ;\n};\nexport const deleteProducts = async (id, dispatch) => {\n  dispatch(deleteProducts_begin());\n\n  try {\n    const response = await adminRequest.delete(`products/${id}`);\n    dispatch(deleteProducts_true(id));\n  } catch (err) {\n    dispatch(deleteProducts_false());\n  }\n\n  ;\n};\nexport const addProducts = async (product, dispatch) => {\n  dispatch(addProducts_begin());\n\n  try {\n    const response = await axios.post(BASE_URL + \"products\", product);\n    dispatch(addProducts_true(response.data));\n  } catch (err) {\n    dispatch(addProducts_false());\n  }\n\n  ;\n}; //not complete\n\nexport const updateProducts = async (id, product, dispatch) => {\n  dispatch(updateProducts_begin());\n\n  try {\n    // const response = await axios.update( BASE_URL+\"products\");\n    dispatch(updateProducts_true({\n      id: id,\n      product: product\n    }));\n  } catch (err) {\n    dispatch(updateProducts_false());\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/AYOUB/gitRepo/frontendweb-pieter-2122-AyoubAitcheikhahmed/ulteam/src/redux/apiRequests.js"],"names":["getProducts_begin","getProducts_true","getProducts_false","deleteProducts_begin","deleteProducts_true","deleteProducts_false","addProducts_begin","addProducts_true","addProducts_false","updateProducts_begin","updateProducts_true","updateProducts_false","axios","adminRequest","BASE_URL","getProducts","dispatch","response","get","data","err","deleteProducts","id","delete","addProducts","product","post","updateProducts"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,EAKIC,oBALJ,EAMIC,mBANJ,EAOIC,oBAPJ,EASIC,iBATJ,EAUIC,gBAVJ,EAWIC,iBAXJ,EAaIC,oBAbJ,EAcIC,mBAdJ,EAeIC,oBAfJ,QAgBY,iBAhBZ;AAiBA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAGA,MAAMC,QAAQ,GAAG,4BAAjB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACvCA,EAAAA,QAAQ,CAAChB,iBAAiB,EAAlB,CAAR;;AACJ,MAAG;AACC,UAAMiB,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAWJ,QAAQ,GAAC,UAApB,CAAvB;AACAE,IAAAA,QAAQ,CAACf,gBAAgB,CAACgB,QAAQ,CAACE,IAAV,CAAjB,CAAR;AACH,GAHD,CAGC,OAAOC,GAAP,EAAW;AACRJ,IAAAA,QAAQ,CAACd,iBAAiB,EAAlB,CAAR;AACH;;AAAA;AACJ,CARM;AAWP,OAAO,MAAMmB,cAAc,GAAG,OAAOC,EAAP,EAAUN,QAAV,KAAuB;AACjDA,EAAAA,QAAQ,CAACb,oBAAoB,EAArB,CAAR;;AACA,MAAG;AAEC,UAAMc,QAAQ,GAAG,MAAMJ,YAAY,CAACU,MAAb,CAAqB,YAAWD,EAAG,EAAnC,CAAvB;AACAN,IAAAA,QAAQ,CAACZ,mBAAmB,CAACkB,EAAD,CAApB,CAAR;AACH,GAJD,CAIC,OAAOF,GAAP,EAAW;AACRJ,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AACH;;AAAA;AACJ,CATM;AAWP,OAAO,MAAMmB,WAAW,GAAG,OAAOC,OAAP,EAAgBT,QAAhB,KAA6B;AACpDA,EAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;;AACJ,MAAG;AACC,UAAMW,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAN,CAAYZ,QAAQ,GAAC,UAArB,EAAgCW,OAAhC,CAAvB;AACAT,IAAAA,QAAQ,CAACT,gBAAgB,CAACU,QAAQ,CAACE,IAAV,CAAjB,CAAR;AACH,GAHD,CAGC,OAAOC,GAAP,EAAW;AACRJ,IAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACH;;AAAA;AACA,CARM,C,CAUP;;AACA,OAAO,MAAMmB,cAAc,GAAG,OAAOL,EAAP,EAAWG,OAAX,EAAoBT,QAApB,KAAiC;AAC3DA,EAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;;AACJ,MAAG;AACC;AACAO,IAAAA,QAAQ,CAACN,mBAAmB,CAAC;AAACY,MAAAA,EAAE,EAACA,EAAJ;AAAOG,MAAAA,OAAO,EAACA;AAAf,KAAD,CAApB,CAAR;AACH,GAHD,CAGC,OAAOL,GAAP,EAAW;AACRJ,IAAAA,QAAQ,CAACL,oBAAoB,EAArB,CAAR;AACH;;AAAA;AACA,CARM","sourcesContent":["import { \r\n    getProducts_begin,\r\n    getProducts_true,\r\n    getProducts_false,\r\n\r\n    deleteProducts_begin,\r\n    deleteProducts_true,\r\n    deleteProducts_false,\r\n    \r\n    addProducts_begin,\r\n    addProducts_true,\r\n    addProducts_false,\r\n\r\n    updateProducts_begin,\r\n    updateProducts_true,\r\n    updateProducts_false\r\n    }  from \"./product_redux\";\r\nimport axios from \"axios\";\r\nimport { adminRequest } from \"../server_methodes\";\r\n\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/\";\r\n\r\nexport const getProducts = async (dispatch) => {\r\n        dispatch(getProducts_begin());\r\n    try{\r\n        const response = await axios.get( BASE_URL+\"products\");\r\n        dispatch(getProducts_true(response.data));\r\n    }catch (err){\r\n        dispatch(getProducts_false());\r\n    };\r\n};\r\n\r\n\r\nexport const deleteProducts = async (id,dispatch) => {\r\n    dispatch(deleteProducts_begin());\r\n    try{\r\n        \r\n        const response = await adminRequest.delete(`products/${id}`);\r\n        dispatch(deleteProducts_true(id));\r\n    }catch (err){\r\n        dispatch(deleteProducts_false());\r\n    };\r\n};\r\n\r\nexport const addProducts = async (product, dispatch) => {\r\n    dispatch(addProducts_begin());\r\ntry{\r\n    const response = await axios.post( BASE_URL+\"products\",product);\r\n    dispatch(addProducts_true(response.data));\r\n}catch (err){\r\n    dispatch(addProducts_false());\r\n};\r\n};\r\n\r\n//not complete\r\nexport const updateProducts = async (id ,product ,dispatch) => {\r\n    dispatch(updateProducts_begin());\r\ntry{\r\n    // const response = await axios.update( BASE_URL+\"products\");\r\n    dispatch(updateProducts_true({id:id,product:product}));\r\n}catch (err){\r\n    dispatch(updateProducts_false());\r\n};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}