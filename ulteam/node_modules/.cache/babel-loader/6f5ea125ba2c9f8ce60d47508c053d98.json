{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./shoppingCart_redux\";\nimport userReducer from \"./user_redux\";\nimport productReducer from \"./product_redux\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  product: productReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/AYOUB/gitRepo/frontendweb-pieter-2122-AyoubAitcheikhahmed/ulteam/src/redux/ulteamStore.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","productReducer","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","version","rootReducer","user","cart","product","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SACAC,YADA,EAEAC,cAFA,EAGAC,KAHA,EAIAC,SAJA,EAKAC,KALA,EAMAC,OANA,EAOAC,KAPA,EAQAC,QARA,QASO,eATP;AAWA,MAAMC,aAAa,GAAG;AACtBC,EAAAA,GAAG,EAAE,MADiB;AAEtBC,EAAAA,OAAO,EAAE,CAFa;AAGtBX,EAAAA;AAHsB,CAAtB;AAMA,MAAMY,WAAW,GAAGhB,eAAe,CAAC;AAChCiB,EAAAA,IAAI,EAAEf,WAD0B;AAEhCgB,EAAAA,IAAI,EAAGjB,WAFyB;AAGhCkB,EAAAA,OAAO,EAAEhB;AAHuB,CAAD,CAAnC;AAQA,MAAMiB,gBAAgB,GAAGd,cAAc,CAACO,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMK,KAAK,GAAGtB,cAAc,CAAC;AACpCuB,EAAAA,OAAO,EAAEF,gBAD2B;AAEpCG,EAAAA,UAAU,EAAGC,oBAAD,IACRA,oBAAoB,CAAC;AACrBC,IAAAA,iBAAiB,EAAE;AACfC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADD;AADE,GAAD;AAHY,CAAD,CAA5B;AAUP,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA5B","sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./shoppingCart_redux\";\r\nimport userReducer from \"./user_redux\";\r\nimport productReducer from \"./product_redux\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\npersistStore,\r\npersistReducer,\r\nFLUSH,\r\nREHYDRATE,\r\nPAUSE,\r\nPERSIST,\r\nPURGE,\r\nREGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst persistConfig = {\r\nkey: \"root\",\r\nversion: 1,\r\nstorage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    cart : cartReducer,\r\n    product: productReducer,\r\n});\r\n\r\n\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\nreducer: persistedReducer,\r\nmiddleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}