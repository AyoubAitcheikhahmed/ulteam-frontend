{"ast":null,"code":"import { getProducts_begin, getProducts_true, getProducts_false, deleteProducts_begin, deleteProducts_true, deleteProducts_false, addProducts_begin, addProducts_true, addProducts_false, updateProducts_begin, updateProducts_true, updateProducts_false } from \"./product_redux\";\nimport axios from \"axios\";\nconst BASE_URL = \"http://localhost:5000/api/\";\nconst TOKEN = JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).user.token;\nexport const getProducts = async dispatch => {\n  dispatch(getProducts_begin());\n\n  try {\n    const response = await axios.get(BASE_URL + \"products\");\n    dispatch(getProducts_true(response.data));\n  } catch (err) {\n    dispatch(getProducts_false());\n  }\n\n  ;\n};\nexport const deleteProducts = async (id, dispatch) => {\n  dispatch(deleteProducts_begin());\n\n  try {\n    console.log(TOKEN);\n    const response = await axios.delete(BASE_URL + `products/${id}`);\n    dispatch(deleteProducts_true(id));\n  } catch (err) {\n    console.log(err);\n    dispatch(deleteProducts_false());\n  }\n\n  ;\n};\nexport const addProducts = async (product, dispatch) => {\n  dispatch(addProducts_begin());\n\n  try {\n    const response = await axios.post(BASE_URL + \"products\", product);\n    dispatch(addProducts_true(response.data));\n  } catch (err) {\n    dispatch(addProducts_false());\n  }\n\n  ;\n}; //not complete\n\nexport const updateProducts = async (id, product, dispatch) => {\n  dispatch(updateProducts_begin());\n\n  try {\n    // const response = await axios.update( BASE_URL+\"products\");\n    dispatch(updateProducts_true({\n      id: id,\n      product: product\n    }));\n  } catch (err) {\n    dispatch(updateProducts_false());\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/AYOUB/gitRepo/frontendweb-pieter-2122-AyoubAitcheikhahmed/ulteam/src/redux/apiRequests.js"],"names":["getProducts_begin","getProducts_true","getProducts_false","deleteProducts_begin","deleteProducts_true","deleteProducts_false","addProducts_begin","addProducts_true","addProducts_false","updateProducts_begin","updateProducts_true","updateProducts_false","axios","BASE_URL","TOKEN","JSON","parse","localStorage","getItem","user","token","getProducts","dispatch","response","get","data","err","deleteProducts","id","console","log","delete","addProducts","product","post","updateProducts"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,EAKIC,oBALJ,EAMIC,mBANJ,EAOIC,oBAPJ,EASIC,iBATJ,EAUIC,gBAVJ,EAWIC,iBAXJ,EAaIC,oBAbJ,EAcIC,mBAdJ,EAeIC,oBAfJ,QAgBY,iBAhBZ;AAiBA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAOC,QAAQ,GAAG,4BAAlB;AACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDC,IAA5D,EAAkEA,IAAlE,CAAuEC,KAArF;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACvCA,EAAAA,QAAQ,CAACtB,iBAAiB,EAAlB,CAAR;;AACJ,MAAG;AACC,UAAMuB,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAWX,QAAQ,GAAC,UAApB,CAAvB;AACAS,IAAAA,QAAQ,CAACrB,gBAAgB,CAACsB,QAAQ,CAACE,IAAV,CAAjB,CAAR;AACH,GAHD,CAGC,OAAOC,GAAP,EAAW;AACRJ,IAAAA,QAAQ,CAACpB,iBAAiB,EAAlB,CAAR;AACH;;AAAA;AACJ,CARM;AAWP,OAAO,MAAMyB,cAAc,GAAG,OAAOC,EAAP,EAAUN,QAAV,KAAuB;AACjDA,EAAAA,QAAQ,CAACnB,oBAAoB,EAArB,CAAR;;AACA,MAAG;AACC0B,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACA,UAAMS,QAAQ,GAAG,MAAMX,KAAK,CAACmB,MAAN,CAAclB,QAAQ,GAAE,YAAWe,EAAG,EAAtC,CAAvB;AACAN,IAAAA,QAAQ,CAAClB,mBAAmB,CAACwB,EAAD,CAApB,CAAR;AACH,GAJD,CAIC,OAAOF,GAAP,EAAW;AACRG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAJ,IAAAA,QAAQ,CAACjB,oBAAoB,EAArB,CAAR;AACH;;AAAA;AACJ,CAVM;AAYP,OAAO,MAAM2B,WAAW,GAAG,OAAOC,OAAP,EAAgBX,QAAhB,KAA6B;AACpDA,EAAAA,QAAQ,CAAChB,iBAAiB,EAAlB,CAAR;;AACJ,MAAG;AACC,UAAMiB,QAAQ,GAAG,MAAMX,KAAK,CAACsB,IAAN,CAAYrB,QAAQ,GAAC,UAArB,EAAgCoB,OAAhC,CAAvB;AACAX,IAAAA,QAAQ,CAACf,gBAAgB,CAACgB,QAAQ,CAACE,IAAV,CAAjB,CAAR;AACH,GAHD,CAGC,OAAOC,GAAP,EAAW;AACRJ,IAAAA,QAAQ,CAACd,iBAAiB,EAAlB,CAAR;AACH;;AAAA;AACA,CARM,C,CAUP;;AACA,OAAO,MAAM2B,cAAc,GAAG,OAAOP,EAAP,EAAWK,OAAX,EAAoBX,QAApB,KAAiC;AAC3DA,EAAAA,QAAQ,CAACb,oBAAoB,EAArB,CAAR;;AACJ,MAAG;AACC;AACAa,IAAAA,QAAQ,CAACZ,mBAAmB,CAAC;AAACkB,MAAAA,EAAE,EAACA,EAAJ;AAAOK,MAAAA,OAAO,EAACA;AAAf,KAAD,CAApB,CAAR;AACH,GAHD,CAGC,OAAOP,GAAP,EAAW;AACRJ,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AACH;;AAAA;AACA,CARM","sourcesContent":["import { \r\n    getProducts_begin,\r\n    getProducts_true,\r\n    getProducts_false,\r\n\r\n    deleteProducts_begin,\r\n    deleteProducts_true,\r\n    deleteProducts_false,\r\n    \r\n    addProducts_begin,\r\n    addProducts_true,\r\n    addProducts_false,\r\n\r\n    updateProducts_begin,\r\n    updateProducts_true,\r\n    updateProducts_false\r\n    }  from \"./product_redux\";\r\nimport axios from \"axios\";\r\n\r\nconst  BASE_URL = \"http://localhost:5000/api/\";\r\nconst TOKEN = JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).user.token;\r\n\r\nexport const getProducts = async (dispatch) => {\r\n        dispatch(getProducts_begin());\r\n    try{\r\n        const response = await axios.get( BASE_URL+\"products\");\r\n        dispatch(getProducts_true(response.data));\r\n    }catch (err){\r\n        dispatch(getProducts_false());\r\n    };\r\n};\r\n\r\n\r\nexport const deleteProducts = async (id,dispatch) => {\r\n    dispatch(deleteProducts_begin());\r\n    try{\r\n        console.log(TOKEN)\r\n        const response = await axios.delete( BASE_URL+`products/${id}`);\r\n        dispatch(deleteProducts_true(id));\r\n    }catch (err){\r\n        console.log(err)\r\n        dispatch(deleteProducts_false());\r\n    };\r\n};\r\n\r\nexport const addProducts = async (product, dispatch) => {\r\n    dispatch(addProducts_begin());\r\ntry{\r\n    const response = await axios.post( BASE_URL+\"products\",product);\r\n    dispatch(addProducts_true(response.data));\r\n}catch (err){\r\n    dispatch(addProducts_false());\r\n};\r\n};\r\n\r\n//not complete\r\nexport const updateProducts = async (id ,product ,dispatch) => {\r\n    dispatch(updateProducts_begin());\r\ntry{\r\n    // const response = await axios.update( BASE_URL+\"products\");\r\n    dispatch(updateProducts_true({id:id,product:product}));\r\n}catch (err){\r\n    dispatch(updateProducts_false());\r\n};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}